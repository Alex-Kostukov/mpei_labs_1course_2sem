unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Menus, Vcl.Grids, Vcl.ComCtrls,
  Vcl.StdCtrls, UnitType, UnitFunc;

type
  TForm1 = class(TForm)
    MainMenu: TMainMenu;
    NTask: TMenuItem;
    N2: TMenuItem;
    NLoad: TMenuItem;
    NSave: TMenuItem;
    N5: TMenuItem;
    NOne: TMenuItem;
    NTwo: TMenuItem;
    NExit: TMenuItem;
    Label1: TLabel;
    EditN: TEdit;
    UpDownN: TUpDown;
    EditMin: TEdit;
    Label3: TLabel;
    EditMax: TEdit;
    Label2: TLabel;
    StringGridMassiv: TStringGrid;
    Label4: TLabel;
    EditOne: TEdit;
    Label5: TLabel;
    EditTwo: TEdit;
    procedure NExitClick(Sender: TObject);
    procedure EditNChange(Sender: TObject);
    procedure NTwoClick(Sender: TObject);
    procedure NOneClick(Sender: TObject);
    procedure NTaskClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}
procedure InputMassiv (var a : TMas; var n : integer);
var i : integer;
begin
  n := Form1.UpDownN.Position;
  SetLength(a, n);
  for i := 0 to n - 1 do
      a[i] := StrToFloat(Form1.StringGridMassiv.Cells[i + 1, 1]);
end;

procedure TForm1.EditNChange(Sender: TObject);
var
  i : integer;
begin
  StringGridMassiv.ColCount := UpDownN.Position + 1;
  for i := 1 to UpDownN.Position do
    StringGridMassiv.Cells[i, 0] := IntToStr(i);
end;

procedure TForm1.NExitClick(Sender: TObject);
begin
  Close;
end;

procedure TForm1.NOneClick(Sender: TObject);
var
  a : TMas;
  res : boolean;
  n : integer;
  x, y : real;
begin
InputMassiv(a, n);

try
  x := StrToFloat(EditMin.Text);
except
  ShowMessage ('Введите минимальное значение диапазона');
  EditMin.SetFocus;
  Exit;
end;

try
  y := StrToFloat(EditMax.Text);
except
  ShowMessage ('Введите максимальное значение диапазона');
  EditMax.SetFocus;
  Exit;
end;

if x >= y then
begin
  ShowMessage ('Минимальное значение должно быть меньше максимального');
  EditMin.SetFocus;
  Exit;
end;

res := Checking (a, 0, n - 1, x, y);
if res then
  EditOne.Text := 'Правда'
else
  EditOne.Text := 'Ложь';

end;

procedure TForm1.NTaskClick(Sender: TObject);
var s, s1, s2 : string;
begin
s := 'Разработать две рекурсивные функции для обработки одномерного динамического массива. В первой функции реализовать линейную рекурсию, во второй – каскадную.';
s1 := '1.  Проверить, что в одномерном массиве нет элементов, не попадающих в заданный диапазон.';
s2 := '2.  Для заданного одномерного массива a из n элементов найти сумму элементов массива, для которых выполняется условие        √(|a[i]|) < i';
Application.MessageBox(PChar(s+#13#10+s1+#13#10+s2),
                         'Условие', MB_OK or MB_ICONINFORMATION);
end;

procedure TForm1.NTwoClick(Sender: TObject);
var
  a : TMas;
  s : real;
  n : integer;
begin
  InputMassiv(a, n);
  s := Sum(a, 0, n - 1);
  EditTwo.Text := FloatToStr (s);
end;

end.
